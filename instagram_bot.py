import os
import logging
import asyncio
import yt_dlp
import requests

from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)

# === üîê –¢–≤–æ–π —Ç–æ–∫–µ–Ω –æ—Ç @BotFather ===
BOT_TOKEN = '8068187770:AAFgoNllhfi949EzgyPEz-WDyRk_u6-TGNs'

# === üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ===
logging.basicConfig(filename='bot_errors.log', level=logging.ERROR)


# === ‚úÖ –ö–æ–º–∞–Ω–¥–∞ /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [["/help"]]
    markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "üëã –ó–¥–∞—Ä–æ–≤–∞! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –∏–∑ Instagram.",
        reply_markup=markup
    )


# === üÜò –ö–æ–º–∞–Ω–¥–∞ /help ===
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üì• –≠—Ç–æ—Ç –±–æ—Ç —Å–∫–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ –∏–∑ Instagram (Reels, –ø–æ—Å—Ç—ã).\n\n"
        "üîó –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É, –∏ —è –ø—Ä–∏—à–ª—é –≤–∏–¥–µ–æ.\n"
        "üîí –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è.\n"
        "üí° –í –ø–ª–∞–Ω–∞—Ö: –ø–æ–¥–¥–µ—Ä–∂–∫–∞ TikTok –∏ YouTube."
    )


# === üì¶ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–æ–∫ ===
async def handle_link(update: Update, context: ContextTypes.DEFAULT_TYPE):
    url = update.message.text.strip()

    if "instagram.com" not in url:
        await update.message.reply_text("‚ö†Ô∏è –≠—Ç–æ –Ω–µ Instagram-—Å—Å—ã–ª–∫–∞.")
        return

    await update.message.reply_text("‚è≥ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ...")

    try:
        ydl_opts = {
            'outtmpl': 'insta_video.mp4',
            'format': 'mp4',
            'quiet': True,
            'noplaylist': True,
            'http_headers': {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64)',
                'Accept-Language': 'en-US,en;q=0.9',
            },
        }

        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            ydl.download([url])

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞
        if os.path.getsize('insta_video.mp4') > 50_000_000:
            os.remove('insta_video.mp4')
            await update.message.reply_text("‚ö†Ô∏è –í–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ (> 50MB). Telegram –Ω–µ –º–æ–∂–µ—Ç –µ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å.")
            return

        # –û—Ç–ø—Ä–∞–≤–∫–∞
        with open('insta_video.mp4', 'rb') as f:
            await update.message.reply_video(f)

        # –ó–∞–¥–µ—Ä–∂–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        await asyncio.sleep(2)
        os.remove('insta_video.mp4')

        # –ö–Ω–æ–ø–∫–∏
        keyboard = [["/help"]]
        markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text("‚úÖ –ì–æ—Ç–æ–≤–æ! –•–æ—á–µ—à—å —Å–∫–∞—á–∞—Ç—å –µ—â—ë –æ–¥–Ω–æ –≤–∏–¥–µ–æ?", reply_markup=markup)

    except Exception as e:
        logging.error(str(e))
        error_text = str(e)

        if "login" in error_text.lower() or "logged-in users" in error_text:
            await update.message.reply_text("üîí –≠—Ç–æ –≤–∏–¥–µ–æ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∏–∑ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞. –Ø –Ω–µ –º–æ–≥—É –µ–≥–æ —Å–∫–∞—á–∞—Ç—å.")
        else:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")


# === üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
app = ApplicationBuilder().token(BOT_TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("help", help_command))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_link))

app.run_polling()
